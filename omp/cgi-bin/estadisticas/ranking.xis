<!-- ====================================================================
 * OPEN MarcoPolo: Sistema de Gestión Bibliotecaria
 * Copyright (c) UNER - http://marcopolo.uner.edu.ar
 *
 * Esta librería es software libre; usted puede redistribuirlo y\o
 * modificarlo según los términos GNU Lesser Gereral Public Licence
 * publicado por la Free Software Foundation; la versión 2 de la
 * Licencia, (o en su opinión) cualquier versión posterior.
 *
 * Esta librería es distribuida con la esperanza que esto será de
 * uso completo, pero SIN GARANTÍA ALGUNA; sin la garantía
 * implícita de valor comercial o salud para un objetivo particular.
 *
 * Para más detalles, vea lo que especifica la licencia
 * GNU Lesser General Public Licence.
 * (http://www.gnu.org/copyleft/lesser.html) 
 *
 * Puede recibir una copia de GNU Lesser General 
 * Public Licence escribiendo a 
 * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, 
 * Ma 02111-1307 USA.
 * 
 * Desarrolladores:
 *
 * Bib. Deharbe, Hipólito
 * e-mail: deharbe@schoenstatt.org.ar; deharbe@fcedu.uner.edu.ar
 * Facultad de Ciencias de la Educación
 * Rivadavia 106
 * (3100) - Paraná
 * Entre Ríos
 * Tel: +54 343 4222033 Int. 25
 * Web: http://biblio.fcedu.uner.edu.ar
 *
 * Lopez, Marcos G.
 * e-mail: mlopez@fceco.uner.edu.ar
 * Facultad de Ciencias Económicas - UNER
 * Urquiza 552
 * (3100) - Paraná
 * Entre Ríos
 * Tel: +54 343 4222172 Int. 22
 * Web: http://www.fceco.uner.edu.ar
 */ -->


<IsisScript>

<function name="contar_lector" action="replace" tag="9995" split="occ">
<!-- 
v9995^e trae las expresiones de búsqueda definidas, en ^t el total de operaciones encontradas y en ^r el campo de ranking a evaluar

Los parámetros de búsqueda tienen el siguiente orden
OPERACION=XX * FECHA=XX * TURNO=XX * DNI=XX * INVENTARIO=XX * TEMATICA=XX * MATERIAL=XX * OPERADOR=XX * TERMINAL=XX 
Los campos rankeables son: Temática, Inventario, Lector, Operario, Día, Hora, Terminal -->

<!-- Gira tantas veces como expresiones de búsqueda halla definidas -->
	<do>
		<parm name="count"><pft>f(nocc(v9995),1,0)</pft></parm>
		<field action="define" tag="1001">Isis_Current</field>
		<loop>
			<field action="import" tag="list">9995</field>
			<field action="occ" tag="3000" from="9995"><pft>v1001</pft></field> <!-- deja la expresión de búsqueda correspondiente al loop actual  -->

			<!--display><pft>'Evaluando: ',v3000,'<br>'</pft></display-->
			
			<!-- si el total de registros = 0 no analiza la expresión -->
			<flow action="skip"><pft>if val(v3000^t)=0 then 'Next' fi</pft></flow>

			<!-- Seguidamente se "Rearma" la expresión dejando en v3001 solamente OPERACION=xx * INVENTARIO=xx * TEMATICA=xx * MATERIAL=xx -->
			
			<field action="add" tag="3001"><pft>         				/* Agrega a v3001 la Operacion=XX  */ 
				left(s(mhu,v3000^e),instr(v3000^e,'Fecha=')-4),		/* el -4 se debe a que luego de la operación continua el operador " * Fecha=" */
			</pft></field>
			
			<field action="replace" tag="3000"><pft>						/* Si se ha indicado el inventario, deja de la expresión (v3000) lo que sigue desde Inventario=xx */
				if instr(v3000^e,'Inventario=')>0 then 						
					mid(v3000^e,instr(v3000^e,'Inventario='),size(v3000^e)) fi</pft></field>
					
			<!-- considerar que el inventario de la búsqueda tiene al final el sufijo de truncado "$" -->
			<field action="replace" tag="3001"><pft>
				if instr(v3000,'Inventario=')>0 then 							/* Agrega a v3001 el Inventario=XX, buscando desde el ppio. de la expresión hasta encontrar en sufijo "$"  */
					v3001,
					left(v3000,instr(v3000,'$')-1) fi</pft></field>

			<!-- Tematica -->
			<field action="occ" tag="3000" from="9995"><pft>v1001</pft></field> <!-- deja la expresión de búsqueda correspondiente al loop actual  -->
			
			<field action="replace" tag="3000"><pft>						/* Deja de la expresión lo que sigue desde Tematica=xx */
				if instr(v3000^e,'Tematica=')>0 then 						
					mid(v3000^e,instr(v3000^e,'Tematica='),size(v3000^e)) fi</pft></field>
					
			<field action="replace" tag="3001"><pft>
				if instr(v3000,'Tematica=')>0 then 							/* Agrega la Tematica=XX, buscando desde el ppio. de la expresión hasta encontrar en sufijo " *"  */
					v3001,' * ',
					left(v3000,instr(v3000,'$')-1) fi</pft></field>

			<field action="add" tag="600"><pft>
				if instr(v3000,'Tematica=')>0 then 							/* Genera el campo v600 con la temática de la expresión */
					left(v3000,instr(v3000,'$')-1) fi</pft></field>
	
			<!-- Material -->
			<field action="occ" tag="3000" from="9995"><pft>v1001</pft></field> <!-- deja la expresión de búsqueda correspondiente al loop actual  -->

			<field action="replace" tag="3000"><pft>					/* Deja de la expresión lo que sigue desde Material=xx */
				if instr(v3000^e,'Material=')>0 then 						
					mid(v3000^e,instr(v3000^e,'Material='),size(v3000^e)) fi</pft></field>
					
			<field action="replace" tag="3001"><pft>
				if instr(v3000,'Material=')>0 then 							/* Agrega la Material=XX, buscando desde el ppio. de la expresión hasta encontrar en sufijo " *"  */
					v3001,' * ',
					left(v3000,instr(v3000,'$')-1) fi</pft></field>

			<field action="occ" tag="3000" from="9995"><pft>v1001</pft></field> <!-- deja la expresión de búsqueda correspondiente al loop actual  -->
			<field action="replace" tag="3001"><pft>replace(s(mpu,v3001),'* *','*')</pft></field>

		  <do task=search>
		    <parm name=db>movi</parm>
		    <parm name=expression><pft>v3000^e</pft></parm>
				<parm name="gizmo">txt_htm</parm>
		    <field action=define tag=1001>Isis_Current</field>
		    <field action=define tag=1002>Isis_Total</field>
				<loop>
					<field action=import tag="list">3000,3001,600</field> <!-- Importa la expresión de búsqueda completa (v3000), la expresión rearmada (v3001) y la temática -->

					<flow action="jump"><pft>if v3000^r<>'localidad' then 'IgnorarLocalidad' fi</pft></flow> <!-- Si el ranking seleccionado no es localidad, salta, sino lee el reg. del usuario aplicando gizmo y dejando este valor en el campo v3003 -->

					<do task="search">
						<parm name="db">lector</parm>
						<parm name="expression"><pft>v2^n</pft></parm>
						<parm name=count>1</parm>
						<parm name=gizmo>oemansi</parm>
						<loop>
							<field action="add" tag="3003"><pft>mhu,v6^l</pft></field>
							<field action="export" tag="list">3003</field>
						</loop>
					</do>
					

					<label>IgnorarLocalidad</label>

					
					<list action="load" type="freq"><pft>
						if nocc(v4)=1 then
							select v3000^r
								 case 'lector': , 	v1/,
								 case 'operador': , 	mhl,v5/,
								 case 'localidad': , 	v3003/,
								 case 'terminal': , 	v6/,
	 							 case 'hora': , 	v3^h.2/,
								 case 'dia': , 		v3^f.2/,
								 case 'tematica': , 	v4^c/,
								 case 'inventario': , v4^i/,
								 case 'material': , 	v4^l/,
								 case 'operacion': , 	v4^t/,
							endsel,
						fi</pft></list>
            
					<!-- Si es un registro con una sola operación, se sobre entiende que el mismo coincide con la expresión de búsqueda. Por 
					lo tanto se omite el análisis de las diferentes ocurrencias de v4 (operaciones)-->

					<flow action="skip"><pft>
						if nocc(v4)=1 then 'Next' fi</pft></flow> 

					<field action="add" previous="delete" tag="53" split="occ"><pft>
						(mhu,
		
		          /* Tener en cuenta si se buscan devoluciones que las morosas figuran en el diccionario 
		          como OPERACION=DEVOLUCION MOROSA, por lo tanto se trabaja con el truncado $ para que al
		          buscar "todas" las devoluciones (morosas o no) sean incluidas (OPERACION=DEVOLUCION$).
							De igual manera para los préstamos, estos figuran en el diccionaro como OPERACION=PRESTAMO SALA o
							OPERACION=PRESTAMO DOMICILIO, en caso de no buscarse por destino se trunca la operación para incluir
							ambos casos (OPERACION=PRESTAMO$)
		          */
		
							'OPERACION=',v4^t,
							  select s(mhu,v4^t)
								 case 'DEVOLUCION': , if s(mhu,v3000[1]):'MOROSA' then 
		              											if s(mhu,v4^m):'S' then '_MOROSA' fi
		            											else
		              											'$'
		            											fi,
								 case 'PRESTAMO': ,  if s(mhu,v3000[1]):'SALA' or s(mhu,v3000[1]):'DOMICILIO' then 
		              											if s(mhu,v4^o):'SALA' then 
																					'_SALA' 
																				else
																					'_DOMICILIO'
																				fi
		            											else
		              											'$'
		            											fi,
								endsel,																							/* tipo de operacion */
							
							if s(mhu,v3000[1]):'INVENTARIO=' then 
								' * INVENTARIO=',v4^i fi 														/* inventario */
		
							if s(mhu,v3000[1]):'TEMATICA=' then
								' * TEMATICA=',v4^c fi 				/* clasificación, toma del subcampo solo la parte indicada en la expresión (v600, tematica) */
		
							if s(mhu,v3000[1]):'MATERIAL=' then 
								' * MATERIAL=',v4^l fi 								/* tipo material */
		
							/)</pft></field> <!-- Arma la expresión (operacion= y fecha= ) con los datos de cada ocurrencia de v4 -->
		
					<field action="add" tag="9997" split="occ"><pft>(if v53=v3001[1] then '1,' else '0,' fi)</pft></field> 
					<!-- Compara la expresión "rearmada" con cada operación, si coincide agreta 1 sino 0 -->
<!--
					<display><pft>'<p>',mfn,newline('<br>'),(v4/),"v3001-: "v3001/,('v53: ',v53/)</pft></display>
					<display><pft>'<br>v9997:',v9997</pft></display>
-->

<!-- Observar que en todos los casos (inclusive para lector, operador y terminal ) se evalua cada operación (de v4) de manera que el 
contador de ranking se incremente para cada ocurrencia. Por ej. si la operación de búsqueda es préstamo y el rankig a evaluar es 
lector y para el caso de que un usuario haya tenido 3 operaciones (pres-pres-dev) este se incrementará 2 veces -->

				
					<list action="load" type="freq"><pft>
						select s(v3000^r)
							 case 'lector': , 	(if v53=v3001[1] then v1[1]/ fi),
							 case 'operador': , 	(if v53=v3001[1] then mhl,v5[1]/ fi),
							 case 'terminal': , 	(if v53=v3001[1] then v6[1]/ fi),
							 case 'localidad': , 	(if v53=v3001[1] then v3003[1]/ fi),
							 case 'hora': , 	(if v53=v3001[1] then v3^h[1].2/ fi),
							 case 'dia': , 		(if v53=v3001[1] then v3^f[1].2/ fi),							 							 
							 case 'tematica': , 	(if v53=v3001[1] then v4^c/ fi), 	
							 case 'inventario': , 	(if v53=v3001[1] then v4^i/ fi),							
							 case 'material': , 	(if v53=v3001[1] then v4^l/ fi),							
							 case 'operacion': , 	(if v53=v3001[1] then v4^t/ fi),
						endsel,</pft></list>

		    </loop>
		  </do>
		
		</loop>
	</do>

	<do task="list">
    <parm name=sort><pft>f(val(v2002),10,0)</pft></parm>
		<parm name="reverse">On</parm>
		<field action=define tag=2001>Isis_Item</field>
		<field action=define tag=2002>Isis_Value</field>
	
	  <field action="cgi" tag="3002">total_items</field>		
		<!--parm name="count"><pft>v3002,"50"n3002</pft></parm--> <!-- máxima cantidad de items mostrados -->
		<parm name="count"><pft>v3002</pft></parm> <!-- v3002 utilizado por el Topten -->
		<loop>
			<field action="add" tag="2003"><pft>'^i',v2001,'^v',v2002</pft></field> <!-- ^i Item ^v Valor ranking -->
			<field action="export" tag="list" previous="add">2003</field>
		</loop>
	</do>
	<return action="export" tag="list">2003</return>

</function>


<section>
  <display><pft>'Content-type: text/html'/#</pft></display>

  <parm name=cipar><pft>cat(getenv('PATH_TRANSLATED'),'cipar.par')</pft></parm>

  <field action="cgi" tag="prefix">tag</field>
  <field action="cgi" tag="3001">campo</field>
	
	<!-- el ambiente cgi trae en distintas ocurrencias de v3000 las expresiones de búsqueda
	y en v3001 el campo a consultar -->	
	<call name="contar_lector"><pft>(v3000,'^r',v3001[1]/)</pft></call> <!-- Saca en v2003 ^i Item ^v Valor ranking -->
	<display><htmlpft><pft>cat(getenv('PATH_TRANSLATED')'plantilla_ranking.htm')</pft></htmlpft></display>

</section>
</IsisScript>