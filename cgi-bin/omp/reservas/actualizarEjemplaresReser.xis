<IsisScript>
<section>
<trace>On</trace>

<display><pft>'Content-type: text/html'/#</pft></display>

<!--
Este script considera una base de datos biblgrafica Catalis MARC21
Los datos de existencias se almacenan en un campo local 859, 
el cual tiene la estructura que se describe a continuación: 
 $b: sección/colección específica donde el ítem se encuentra
 $p: inventario (identificación de la pieza)
 $3: parte (ej. "Vol. 1", "Parte II", "Tomo 3") 
 
Actualizará la base Reser cuya estructura es:
Inventarios                   ie                  1 1000 0 1
Reservas                      ufhc                2 1000 0 1
Cola reserva                  ufhcn               3 1000 0 1
Ejemplares de consulta                            4 1000 0 0
Perfil de reserva                                 5 1000 0 0


El parametro Perfil no está siendo utilizado en esta instancia.
<field action="cgi" tag="5001">Perfil</field>
<display><pft>if a(v5001) then 'Error:'/,'Debe Indicar el parámetro "Perfil" (ej. Perfil=General)'/ fi</pft></display>
<flow action="exit"><pft>"Now"n5001</pft></flow>
-->
	

<!-- recorre la base bibliografica completa -->
<do task="mfnrange">
	<parm name="db">biblo2</parm>	
	<loop>
		<!-- 
		Filtro para incluir registros bibliograficos en la base de reservas 
		Ejemplo: solo obras monograficas
		no inluir por ej analiticas -->
		
		<!--flow action="skip"><pft>if (not v5:'m') then 'Next' fi</pft></flow-->
		<!-- fin filtro -->
		
		
		<!--
		Se crea una lista (conjunto) con cada una de las partes de la obra.
		Se agrega un elemento a la lista según lo siguiente:
		* v859^3: Se agrega la parte al conjunto si el ejemplar tiene parte (^3)
		* #: Si la ocurrencia tiene nro. de inventario y no tiene parte definida se agrega #
		-->
		
		<!-- Se inicializa la lista -->
		<list action=delete>now</list>
		
		
		<!--
		Creo la lista (conjunto) de partes.		
		Algoritmo:
			Por cada ejemplar (cada occ de 859)
				Si el mismo tiene inventario p(v859^p)
					si no tiene parte ''
						agrego a la lista #
					sino (o sea que tiene paret
						agrego la parte a la lista ^3
					fin si
				fin si
			fin por cad
		-->
		<list action=load type=freq>			
			<pft>(if p(v859^p) then if v859^3='' then '#' else v859^3 fi, fi /)</pft> 
		</list>
		
		<!-- Recorro la lista de partes (CD, V.1, V.2, etc.) -->
		<do task=list>
			<parm name=sort><pft>v2002</pft></parm>
			<field action=define tag=2001>Isis_Current</field>
			<field action=define tag=2002>Isis_Item</field>
			<loop>

			    <field action=import tag=859>859</field>

				
				<!--
				Los valores posibles del subcampo e (estado de reservabilidad) son:
				consulta (solo se presta en condiciones especiales, por ej: los fines de semana), 
				prestable (se presta regularmente), 
				tesoro (no sale nunca de la biblioteca)
				
				se guarda en el subcampo ^i el nro de inventario
				en el subcampo ^e el estado
				
				Referencias:
				En 3001 se genera la lista de los ejemplares (v859) correspondientes
				a la parte en cuestion.
				v2002[1]='#' corresponde a los ejemplares que no tienen parte.				
				-->
				
				<field action="add" tag="3001" split="occ"><pft>							
					(if (v2002[1]='#' and v859^3='') or v859^3 = v2002[1] then '^i',v859^p,'^e',
						if v859^b.2='su' then 'prestable' 
						  else  'tesoro'
						fi,/ 
					fi)
				</pft></field>
				
				<!--
				En 3010 tenemos el número de mfn de los registros correspondiente a los
				inventarios que ya están en reser.
				-->
				
				<field action=add tag=3010 split="occ"><pft>
			    	(if (l(['reser']v3001^i)<>0)
			    	then
			    		f(l(['reser']v3001^i),1,0)
			    	fi,/)
				</pft></field>
				
				<!--
				Dado que los inventarios corresponden a una misma parte, coninciden
				en el mfn, por lo cual tomaremos el primero [1] y lo asignamos a v3011.
				Si ningun inventario esta en reser quiere decir que debemos crear
				un nuevo registro para todos los ejemplares. En este caso asignamos
				'0' a v3011
				-->

				<field action=add tag=3011><pft>
					if (nocc(v3010)=0)
					then
						'0'
					else
						v3010[1]
					fi
				</pft></field>
								
				<flow action=jump><pft>if v3011='0' then 'NoEsta' fi</pft></flow>
				
				<label>Esta</label>
				<!-- Si existe un registro en reser correspondiente a uno de los ejemplares
				entonces actualizamos dicho registro. En 3011 está el mfn -->
				<do task="update">
    				<parm name="db">reser</parm>
    				<parm name="mfn"><pft>v3011</pft></parm>
					<parm name="fst"><pft>cat('reser.fst')</pft></parm>
				    <field action="define" tag="1102">Isis_Status</field>
				    <field action="define" tag="1011">Isis_Lock</field>
				    <parm name=lockid><pft>'cualquiera'</pft></parm>
				    <update>
			    		<field action="import" tag=3001>3001</field>
			    		<field action="delete" tag="1">ALL</field>
			    		<field action="replace" tag="1" split=occ><pft>(v3001/)</pft></field>
			    		<!-- Marco el registro a efectos de poder eliminar los registros de 
			    		reser que deberían ser eliminados. Es decir que se dieron de baja
			    		todos los ejemplares de la parte -->
			    		<field action="add" tag="1111">modificado</field>
			    		<field action="delete" tag="list">3001</field>
			    		<write>Unlock</write>
				    </update>
				</do>
				<flow action=jump>FinUpdate</flow> 
				
				 
				<label>NoEsta</label>
				<!-- Si no existe ningun registro en reser correspondiente a uno de los ejemplares
				entonces creamos un nuevo registro -->
				<do task="update">
					<parm name="db">reser</parm>
					<parm name="mfn">New</parm>
					<parm name="fst"><pft>cat('reser.fst')</pft></parm>
				    <field action="define" tag="1102">Isis_Status</field>
				    <field action="define" tag="1011">Isis_Lock</field>
				    <update>
						<field action="import" tag=3001>3001</field>
						<!-- Inventarios con estados -->
						<field action="add" tag="1" split="occ"><pft>(v3001/)</pft></field> 
						
						<!-- Cantidad de ejemplares de consulta/disponibles -->
						<!-- los inventarios que figuran con estado consulta -->
						<field action="add" tag="4"><pft>(if v3001^e='consulta' then '1' fi)</pft></field> 
						<field action="replace" tag="4"><pft>f(size(v4),1,0)</pft></field> 
						<field action="add" tag="1111">modificado</field>
						<field action="delete" tag="list">3001</field>
						<!--display><pft>'Creando: Inv.',v3001[1],' con ',f(nocc(v1)-1,1,0),' reg. hijos asociado/s '/</pft></display>
						<!-- Incorpora el Perfil indicado a traves del cgi (Perfil) -->
						<field action="cgi" tag="5">Perfil</field>
						<write>Unlock</write>		
					</update>
				</do> <!-- Fin Update reser -->
							 
				<label>FinUpdate</label>
			</loop> <!-- Fin loop list -->
		</do> <!-- Fin do list -->
	</loop> <!-- Fin loop biblo2 -->
</do> <!-- Fin do biblo2 -->

<!-- Eliminamos los registros de reser que cuyos inventarios ya no
forman parte de la base bibliografica.
El indicador es el campo v1111 con valor 'modificado' -->

<do task="mfnrange">
<parm name="db">reser</parm>
	<loop>						
		<do task="update">
			<parm name="db">reser</parm>
			<parm name="mfn"><pft>mfn</pft></parm>
		    <field action="define" tag="1102">Isis_Status</field>
		    <field action="define" tag="1011">Isis_Lock</field>
			<parm name=lockid><pft>'cualquiera'</pft></parm>
			
			<update>
			
				<flow action="jump"><pft>if v1111='modificado' then 'NoEliminar' fi</pft></flow>
				<label>eliminar</label>
				
					<!-- antes de borrar el registro, es necesario borrar todos los campos -->
					<field action=delete tag=list>ALL</field>						
					<!-- ahora se procede a borrar  el registro -->
					<write>Delete</write>
					
				<flow action="jump">FinEliminar</flow>			
				<label>NoEliminar</label>
				
					<field action="delete" tag="list">1111</field>
					<write>Unlock</write>
				
				<label>FinEliminar</label>
				
			</update>
		</do> <!-- Fin update reser -->					
	</loop> <!-- Fin loop mfnrange reser -->	
</do> <!-- Fin mfnrange reser -->
</section>
</IsisScript>