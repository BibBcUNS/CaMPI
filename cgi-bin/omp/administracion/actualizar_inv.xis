<!-- Este script actualiza la base de datos de existencias (exist) eliminando los inventarios
dados de baja, agregando los nuevos inventarios y actualizando el estado de los inventarios
existentes. Esta informaciÃ³n estarÃ¡ basada en la base de datos bibliogrÃ¡fica (biblo).

No se realiza un recorrido por la base exist buscando inventarios que no estén más en la base
bibliográfica. Esta verificación debe ser relizada por el proceso check_consistencia.xis

  -->
  

<!-- TAGs utilizados:

	v1000: (parámetro) path del config.
	v5000: Parámetros del archivo config (repetible).
	
	v5001: tag y subcampo de los inventarios.
	v5002: Formato de catalogación.
	v5003: Estado del ejemplar.
	v5004: Directorio de las bases.

	v2001: Lista de inventarios del registro bibliográfico (biblo)
	v2005: String '^i'
	v2006: String '^s'
	v2005: String '^i'
	
	v1001: Isis_Item (list)
	v1002: Isis_Current (list)

	v1102: Isis_Status (update biblo lock)
	v1011: Isis_Lock (update biblo lock)
	
	v2500: Estado del ejemplar
	v2510: Inventario
	v2511: Sección Colección
	v2515: Mfn del inventario en EXIST
	v2517: Lista de inventarios duplicados (serán ignorados)
	v2520: Verificamos si un inventario está en EXIST
	v2525: Fecha del sistema
	v2530: Estado del ejemplar: PERM / PRES
	
	v2600: Cantidad de ejemplares modificados
	v2601: Cantidad de ejemplares incorporados
	v2602: Cantidad de ejemplares eliminados
	v2603: Cantidad de ejemplares que no se pudieron dar de bajar por estar prestado.
	
	v3333: Mfn del registro en BIBLO
	
-->
  
<IsisScript>
  <section>  
    	<display><pft>'Content-type: text/html'/#</pft></display> 
    	
    	 <trace>!BR</trace>
        <parm name=cipar><pft>
      	cat(getenv('PATH_TRANSLATED'),'cipar.par')
      	</pft></parm> 	

		<field action="replace" tag="5001"><pft>ref(['config']1,v1)</pft></field>
		<field action="replace" tag="5002"><pft>ref(['config']1,v6)</pft></field>
		<field action="replace" tag="5003"><pft>ref(['config']1,v2)</pft></field>

    	<display><pft>
      '<html><body bgcolor="#E8E8D0">',
      '<table border="0" width="100%">',
      '<tr>',
        '<td width="50%"><big>',ref(['config']1,v7),'</big><small><br>',
          'Fecha: ',
            select s(date)*16.1
              case '0': ,'Domingo, ',
              case '1': ,'Lunes, ',
              case '2': ,'Martes, ',
              case '3': ,'Miércoles, ',
              case '4': ,'Jueves, ',
              case '5': ,'Viernes, ',
              case '6': ,'Sábado, ',
            endsel,
            mid(date,7,2),'/',mid(date,5,2),'/',mid(date,1,4)
			'  --  ',mid(date(datetime),10,9),
          '</small><big></big>',
        '</td>',
        '<td width="50%" align="right">',
          '<em>Sistema de Circulación <img src="/omp/omp.gif" width="59" height="45" align="middle"></em>',
        '</td>',
      '</table><hr>',
    </pft></display>
    
    <display><p align="center"><big>Actualización de Inventarios</big></p></display>

    <!-- 2010 indica si es SO windows -->
	<field action="replace" tag="2010"><pft>
		if getenv('SERVER_SOFTWARE') : 'Win' or getenv('OS') : 'Win' then
			'WIN'
		else
			'LINUX'
		fi
	</pft></field>						
	
		<!-- mx cipar=<path_cipar>/cipar.par exist fts=@dicc_invent.fst fullinv=dicc_invent
		El path del MX y de las bases se busca en la base CONFIG -->
		<!-- Hasta ahora la única dif entre win y lin es el separaror de comandos: "|" en Win y ";" en Lin -->
		<display><pft>
			if v2010='WIN' then
				system(ref(['config']1,
							'cd "',v5,'/exist/dicc_invent"|',
							'"',v4,'" "cipar=',getenv('PATH_TRANSLATED'),'cipar.par" dicc_invent fst=@dicc_invent.fst fullinv=dicc_invent'
						)
					)
			else
					system(ref(['config']1,
							'cd "',v5,'/exist/dicc_invent";'
							'"',v4,'" "cipar=',getenv('PATH_TRANSLATED'),'cipar.par" dicc_invent fst=@dicc_invent.fst fullinv=dicc_invent'
						)
					)
			fi
		</pft></display>
		
		<!-- Limpiamos el archivo de logs de inventarios que se encuentran duplicados -->
		<file action="create" type="output">log_inventarios_duplicados.txt</file>
		<file action="close" type="output">now</pft></file>
		
		<!-- Limpiamos el archivo de logs para bajas de ejemplares prestados -->
		<file action="create" type="output">log_baja_prestados.txt</file>
		<file action="close" type="output">now</pft></file>
		
		
	<!-- Generamos una lista con los inventarios que estan duplicados en la base BIBLO -->
	<!-- Durante el proceso dichos inventarios serán saltados -->
   	<!--do task=mfnrange>
    <parm name="db">marc</parm>   	
    <loop>
    	<field action=import tag=2517>2517</field>
    	<field action=replace tag=2517><pft>
    		(
    			if (mfn<>l(['marc_invent']v859^p) and v859^p<>'' and v859^p<>'0' )
    			then v2517,'~',v859^p
    			fi
    		)
    	</pft></field>
    	<field action=export tag=2517>2517</field>
    </loop>
    </do-->
<do task=keyrange>
<parm name=db>marc_invent</parm>
<field action=define tag=1001>Isis_Current</field>
<field action=define tag=1>Isis_Key</field>
<field action=define tag=2>Isis_Postings</field>
<loop>
   <field action=replace tag=2517>
	  <pft>v2517,if val(v1)<>0 then if val(v2) > 1 then '~',v1 fi fi</pft>
   </field>
   <field action=export tag=2517>2517</field>
</loop>
</do>
	
<!-- Recorro los registros de la base BIBLO -->
    <do task=mfnrange>
    <parm name="db">marc</parm>
    <!--parm name="count">10</parm-->
    
     <!-- inicializamos los contadores de ejemplares (modificados/incorporados/eliminados/error al eliminar) -->
	<field action=replace tag=2600>0</field>
	<field action=replace tag=2601>0</field>
	<field action=replace tag=2602>0</field>
	<field action=replace tag=2603>0</field> 
	
	<loop>
    	<field action=import tag=list>2600,2601,2602,2603,2517</field>
    	<!-- Importamos contadores + lista de inventarios duplicados -->
    	
		<field action="import" tag="list">5001,5003</field>
		<!--	 5001 indica el campo en que se encuentra el inventario
				 5003 indica el campo en que se encuentra sección/colección -->

				
		<!-- v2001 contiendrá todos los inventarios y el valor de sección/colección del registro bibliográ¡fico.
		Cada ocurrencia del campo tendrá el siguiente formato:  "^iInvantario^sSección" -->
		
		<field action=replace tag=2005>'^i'</field> <!-- porque necesito imprimir comillas simples en la sig linea -->
		<field action=replace tag=2006>'^s'</field> <!-- porque necesito imprimir comillas simples en la sig linea -->
		
		<!-- Si está definido el tag para sección/colección entonces utilizamos el mismo para definir dicho valor. -->
		<!-- En caso contrario el campo sección/colección para el inventario lo definimos como vacio '' -->
		<field action="add" tag="2001" split="occ"><htmlpft><pft>
			if (v5003<>'')
				then
					'[pft](',v2005,v5001,v2006,v5003,'/)[/pft]'
				else
					'[pft](',v2005,v5001,v2006'/)[/pft]'
			fi
		</pft></htmlpft></field>
		
		<!-- carga la lista con todos los nro. de inventarios y sección/colección -->
		<list action="delete">Now</list>
		<list action="load"><pft>(v2001/)</pft></list>

		<field action=replace tag=3333><pft>mfn(0)</pft></field>
		<!-- Recorremos todos los ejemplares del registro BIBLO actual -->	
		<do task=list>
		<field action=define tag=1001>Isis_Item</field>
		<field action=define tag=1002>Isis_Current</field>
		<loop>
			<!-- Importamos los tags contadores -->
			<field action=import tag=list>2600,2601,2602,2603</field>
			<!-- Importamos el indicador de tag de sección/colección y la lista de inventarios duplicados -->
			<field action=import tag=list>5003,2517</field>
			<!-- Importamos el mfn de biblo en el campo v3333 -->
			<field action=import tag=3333>3333</field>

			
			<!-- Separamos el inventario de la sección/colección -->
			<!-- 2510: inventario -->
			<field action="replace" tag="2510"><pft>v1001^i</pft></field>
			
			<!-- 2511: seccion/coleccion. En mayúscula (mhu) -->
			<field action="replace" tag="2511"><pft>mhu,v1001^s</pft></field>		
			
			<!-- Salteamos el registro si no tiene definido el inventario -->		
			<flow action=jump><pft>if (v2510='' or v2510='0') then 'FIN' fi</pft></flow>
			
			<!-- Si es un inventario duplicado registramos el log en un archivo . Luego salteamos el registro, jump 'FIN' -->		
			<flow action=jump><pft>if (not v2517:v2510) then 'NO_DUPLICADO' fi</pft></flow>
			
					<!-- En caso que sea duplicado... -->
					<field action=replace tag=2525><pft>DATE</pft></field>
					<file action="append" type="output">log_inventarios_duplicados.txt</file>
							<display><pft>
					  			'>',/,
					  			c4,'Inventario duplicado en la base bibliográfica',
					  				' (',mid(v2525,7,2),'/',mid(v2525,5,2),'/',mid(v2525,1,4),' ',mid(v2525,10,2),':',mid(v2525,12,2),')',/,
					  			c4,'inventario: ',v2510,/,
					  			c4,'mfn biblo: ',v3333,/,
					  		</pft></display>
					<file action="close" type="output">now</pft></file>
					<display><pft>'<font color="red"><b>Advertencia!:</b> Inventario DUPLICADO: </font>',v2510,' (mfn: ',v3333,')<br></pft></display>
					<flow action=jump>FIN</flow>
			
			<label>NO_DUPLICADO</label>

			<!-- 2500: Determinamos el estado del ejemplar en función de sección/colección -->
			
			<!-- Si no está definido el campo sección/colección el estado será 'PERM' -->
				<!-- Permitidos para prestamos: Subsuelo, subsueloA/B y CDB -->
			    <!-- Material de consulta: 'CONS' -->
			    <!-- Bajas: En catalis los registros no se borran. En sección/colección se indica con el texto 'BAJA' -->		
			    <!-- Todo ejemplar que no defina ninguno de los anteriores se lo considera como BAJA -->		
			    <!--if (v5003='')
			    then
			    	'PERM'
			    else
				    if (v2511.3='SUB' or v2511.6='C.D.B.' or v2511='S' or v2511='SA' or v2511='SB')
					then 'PERM'
					else
					 	if (v2511.4='CONS')
					 	then 'CONS'
					 	else 'BAJA'
					 	fi
					fi
				fi-->
				
			<field action=replace tag=2500><pft>@def_estados.pft</pft></field>
			
			<!-- v2520: verificamos si el inventario está en exist: INV_ESTA / INV_NO_ESTA -->
			<field action=replace tag=2520><pft>
				if (l(['dicc_invent']v2510)>0)
				then 'INV_ESTA'
				else 'INV_NO_ESTA'
				fi
			</pft></field>

			<!-- v2515: mfn en exist correspondiente al inventario en cuestión (puede ser 0 y no se utiliza) -->
			<field action="replace" tag="2515"><pft>f(l(['dicc_invent']v2510),1,0)</pft></field>
			
			<flow action=jump><pft>
				if v2500='BAJA'
				then if v2520='INV_ESTA'
					then 'ELIMINAR_DE_EXIST'
					else 'FIN'
					fi
				else if v2520='INV_ESTA'
					then 'ACTUALIZAR_EN_EXIST'
					else 'INCORPORAR_EN_EXIST'
					fi
				fi
			</pft></flow>
			
			
			<label>ELIMINAR_DE_EXIST</label>
			<!-- En el caso que haya que dar de baja un ejemplar -->
					
					<!-- En el tag 2530 verificamos si el ejemplar está prestado.
					En ese caso registramos el log y salamos al ejemplar siguiente (jump 'FIN') -->
					<field action=replace tag=2530><pft>ref(['exist']l(['dicc_invent']v2510),v985)</pft></field>
					<flow action=jump><pft>if v2530<>'PRES' then 'NO_ESTA_PRESTADO' fi</pft></flow>
					<label>ESTA_PRESTADO</label>
							<!-- Lo siguiente es en el caso que no se de de baja porque esta prestado -->
		
							<!-- incrementamos el contador correspondiente a efecto informativo -->
						    <field action=replace tag=2603><pft>f(val(v2603)+1,1,0)</pft></field>
						    
							<!-- Recuperamos la fecha/hora del sistema -->
						    <field action=replace tag=2525><pft>DATE</pft></field>
						    
						    <!-- Almasenamos el log en el archivo correspondiente -->
							<file action="append" type="output">log_baja_prestados.txt</file>
						  		<display><pft>'(',mid(v2525,7,2),'/',mid(v2525,5,2),'/',mid(v2525,1,4),' ',mid(v2525,10,2),':',mid(v2525,12,2),')',/</pft></display>
						  		<display><pft>c4,'El siguiente ejemplar no se puede dar de baja por estar prestado',/</pft></display>
						  		<display><pft>c4,'inventario: ',v2510,/</pft></display>
						  		<display><pft>c4,'mfn biblo: ',v3333,/</pft></display>
						  		<display><pft>c4,'mfn exsist: ',v2515,/</pft></display>
						  		<display><pft>c4,'estado: ',v2530,/</pft></display>
							<file action="close" type="output">now</pft></file>
							
							<!-- Mostramos en pantalla el error correspondiente -->
							<display><pft>'<font color="red"><b>Advertencia!:</b> No se puede dar de baja porque está prestado: </font> Inventario: ',v2510,'<br></pft></display>
							<flow action=jump>FIN</flow>
						
					<label>NO_ESTA_PRESTADO</label>
							<!-- En este caso borramos el registro de la base EXIST -->
							<!-- Incrementamos el contador correspondiente a efecto informativo -->
						    <field action=replace tag=2602><pft>f(val(v2602)+1,1,0)</pft></field>
						    	
						    <!-- Realizamos el borrado propiamente dicho -->				
							<do task=update>
							<parm name=db>exist</parm>
							<parm name="fst"><pft>cat('exist.fst')</pft></parm>
							<parm name=mfn><pft>v2515</pft></parm>
							<parm name="lockid">Admin</parm>
							<field action=define tag=1102>Isis_Status</field>
							<field action=define tag=1011>Isis_Lock</field>
							<update>
							  <write>Delete</write>
							  <!-- Mostramos en pantalla un mensaje de error en caso que existiera. Luego finalizamos el proceso -->
							  <display><pft>
							    if val(v1102)>0 then 
							      'ERROR: !, no se logró borrar el reg. hijo ',v977/
												fi</pft></display>
											<field action="export" tag="list">1102</field>
							</update>
							</do>
		
							<!-- controlamos el resultado del borrado. En caso de error terminamos la ejecución -->
				            <flow action="exit"><pft>if val(v1102)>0 then 'Now' fi</pft></flow>
					        <flow action=jump>FIN</flow>
					
			<label>ACTUALIZAR_EN_EXIST</label>
			<!-- Si el inventario está y tenemos que actualizar el estado en exist -->
					<!-- incrementamos el contador correspondiente a efecto informativo -->
				    <field action=replace tag=2600><pft>f(val(v2600)+1,1,0)</pft></field>
				

				    <!-- Realizamos la actualización propiamente dicha -->
				    <do task=update>
					<parm name=db>exist</parm>
					<parm name="fst"><pft>cat('exist.fst')</pft></parm>
					<parm name=mfn><pft>v2515</pft></parm>
					<parm name="lockid">Admin</parm>
					<field action=define tag=1102>Isis_Status</field>
					<field action=define tag=1011>Isis_Lock</field>
					<update>
						<field action="delete" tag="list">987</field>
						<field action=import tag=987>2500</field> <!-- Actualizamos el campo estado -->
						<write>Unlock</write>						
		              	<!-- En caso de producirse un error, Mostramos en pantalla el mensaje correspondiente. Luego finalizamos el proceso -->
						<display><pft>
							if val(v1102)>0 then 
							'ERROR: !, no se logró borrar el reg. hijo ',v977/
							fi
						</pft></display>
						<field action="export" tag="list">1102</field>
					</update>
					</do>
					
		             <!-- En caso de producirse un error, Mostramos en pantalla el mensaje correspondiente. Luego finalizamos el proceso -->					<!-- controlamos el resultado del borrado. En caso de error terminamos la ejecución -->
	            	<flow action="exit"><pft>if val(v1102)>0 then 'Now' fi</pft></flow>
	        		<flow action=jump>FIN</flow>

			<label>INCORPORAR_EN_EXIST</label>						
			<!-- Si el inventrario no está y hay que agregarlo a exist -->
					<!-- incrementamos el contador correspondiente a efecto informativo -->
				    <field action=replace tag=2601><pft>f(val(v2601)+1,1,0)</pft></field>
				
					<do task=update>
					<parm name=db>exist</parm>
					<parm name="fst"><pft>cat('exist.fst')</pft></parm>
					<parm name=mfn>New</parm>
					<field action=define tag=1102>Isis_Status</field>
		            <update>
		              <field action="import" tag="977">2510</field> <!-- Inventario -->
		              <field action="replace" tag="985">PERM</field> <!-- Estado -->
		              <field action="import" tag="987">v2500</field> <!-- Estado -->
		              <write>Unlock</write>
		              <!-- En caso de producirse un error, Mostramos en pantalla el mensaje correspondiente. Luego finalizamos el proceso -->
		              <display><pft>
		                if val(v1102)>0 then 
		                  'ERROR: !, no se logró grabar el reg. hijo ',v977/
										fi</pft></display>
									<field action="export" tag="list">1102</field>
		            </update>
			        </do>

			        <!-- controlamos el resultado del borrado. En caso de error terminamos la ejecución -->
	            	<flow action="exit"><pft>if val(v1102)>0 then 'Now' fi</pft></flow>
		        	<flow action=jump>FIN</flow>
		
			
			<label>FIN</label>
			<!-- Exportamos los contadores -->
			<field action=export tag=list>2600,2601,2602,2603</field>

		</loop>		
		</do>
		
		<!-- Exportamos los contadores -->
		<field action=export tag=list>2600,2601,2602,2603</field>

    </loop>    	
    </do>
    
    <display><pft>
    	'<hr><b>RESULTADO DE LA EJECUCIÓN: </b><br>'
    	'<table border="1" cellpadding="5" cellspacing="0"  width="300px">',
    	'<tr><td>Ejemplares MODIFICADOS</td><td>', v2600, '</td></tr>'
    	'<tr><td>Ejemplares INCORPORADOS</td><td>', v2601, '</td></tr>',
    	'<tr><td>Ejemplares DADOS DE BAJA</td><td>', v2602, '</td></tr>',
    	'<tr><td><b>Ejemplares que no se pueden dar de baja por estar prestado</b></td><td><b>', v2603, '</td></b></tr>',
    	'</tr></table><br>',
    	'<span style="font-size:1.3em; color:#0C0; font-weight:bold;">Terminado: El proceso de actualización finalizó correctamente.</span>'
    </pft></display>
    
    <display>
    	<br><br><a href="JavaScript:history.go(-1)"> << Volver </a></p>
    	</body>
    	</html>
    </display>
</section>
</IsisScript>
